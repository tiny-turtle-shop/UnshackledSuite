<MudIconButton Disabled="@(IsWorking || Disabled)" OnClick="@HandleClicked" Class="@Class" Title="@Title" Variant="@Variant" Color="@Color" Size="@Size" ButtonType="@ButtonType" 
		   Icon="@(IsWorking ? string.Empty : Icon)">
	@if (IsWorking)
	{
		<MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
	}
</MudIconButton>
@code {
	[Parameter] public ButtonType ButtonType { get; set; } = ButtonType.Button;
	[Parameter] public Variant Variant { get; set; } = Variant.Text;
	[Parameter] public Color Color { get; set; } = Color.Default;
	[Parameter] public Size Size { get; set; } = Size.Medium;
	[Parameter] public string Class { get; set; } = string.Empty;
	[Parameter] public string Icon { get; set; } = string.Empty;
	[Parameter] public string Title { get; set; } = string.Empty;
	[Parameter] public bool Disabled { get; set; } = false;
	[Parameter] public bool IsWorking { get; set; } = false;
	[Parameter] public EventCallback<MouseEventArgs> OnClick { get; set; }

	protected async Task HandleClicked(MouseEventArgs evt)
	{
		await OnClick.InvokeAsync(evt);
	}
}