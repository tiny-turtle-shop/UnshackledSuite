@using MudBlazor.Utilities

<div class="@CssClass">
	<MudLink OnClick="@(() => HandleViewAllClicked())">
		<MudImage Fluid="true" Class="rounded-lg" Src="@FeaturedImage.ImageUrl(BaseUrl)" />
		@if (Images.Count > 1)
		{
			<MudIconButton Icon="@Icons.Material.Filled.PhotoLibrary" />
		}
	</MudLink>
</div>

@code {
	[Inject] protected IDialogService DialogService { get; set; } = default!;

	[Parameter] public string Class { get; set; } = string.Empty;
	[Parameter] public string BaseUrl { get; set; } = string.Empty;
	[Parameter] public string GalleryTitle { get; set; } = "Image Gallery";
	[Parameter] public List<ImageModel> Images { get; set; } = [];
	[Parameter] public AspectRatios AspectRatio { get; set; } = AspectRatios.R16x9;

	protected ImageModel FeaturedImage => Images.Where(x => x.IsFeatured == true).FirstOrDefault() ?? ImageModel.Default(AspectRatio);

	private string CssClass => new CssBuilder("multiple-image-component")
		.AddClass(Class)
		.Build();

	protected async Task HandleViewAllClicked()
	{
		if (Images.Count > 0)
		{
			var options = new DialogOptions
				{
					BackgroundClass = "bg-blur",
					FullScreen = false,
					FullWidth = false,
					CloseButton = true,
					CloseOnEscapeKey = true,
					MaxWidth = MaxWidth.ExtraLarge
				};

			var parameters = new DialogParameters
			{
				{ nameof(DialogPhotoViewer.Images), Images },
				{ nameof(DialogPhotoViewer.BaseUrl), BaseUrl }
			};

			var dialog = await DialogService.ShowAsync<DialogPhotoViewer>(GalleryTitle, parameters, options);
			var result = await dialog.Result;
		}
	}
}
