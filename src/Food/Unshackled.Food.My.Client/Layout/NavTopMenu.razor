@inherits Unshackled.Studio.Core.Client.Components.BaseComponent<Member>

<MudNavMenu>
	<MudNavLink Icon="@Icons.Material.Filled.Dashboard" Href="/" Match="NavLinkMatch.All">Dashboard</MudNavLink>
	<MudNavLink Icon="@Icons.Material.Filled.CollectionsBookmark" Href="/cookbooks" Match="NavLinkMatch.Prefix">Cookbooks</MudNavLink>
	<MudNavLink Icon="@Icons.Material.Filled.Groups" Href="/households" Match="NavLinkMatch.Prefix">Households</MudNavLink>

	@if (ActiveMember.ActiveCookbook != null)
	{
		<MudDivider Class="my-2" />

		<MudText Typo="Typo.caption" Color="Color.Tertiary" Class="d-block ml-4">@ActiveMember.ActiveCookbook.Title Menu</MudText>
		<MudNavGroup Title="Cookbook" Icon="@Icons.Material.Filled.MenuBook" Expanded="@isExpanded[menuCookbook]" ExpandedChanged="@((bool val) => HandleExpandedChanged(menuCookbook, val))">
			<MudNavLink Href="/cookbook-recipes" Match="NavLinkMatch.Prefix">Recipes</MudNavLink>
		</MudNavGroup>
	}

	@if (ActiveMember.ActiveHousehold != null)
	{
		<MudDivider Class="my-2" />

		<MudText Typo="Typo.caption" Color="Color.Tertiary" Class="d-block ml-4">@ActiveMember.ActiveHousehold.Title Menu</MudText>
		<MudNavGroup Title="Meal Prep" Icon="@Icons.Material.Filled.Dining" Expanded="@isExpanded[menuMealPrep]" ExpandedChanged="@((bool val) => HandleExpandedChanged(menuMealPrep, val))">
			<MudNavLink Href="/recipes" Match="NavLinkMatch.Prefix">Recipes</MudNavLink>
			<MudNavLink Href="/ingredients" Match="NavLinkMatch.Prefix">Ingredients</MudNavLink>
			<MudNavLink Href="/recipe-tags" Match="NavLinkMatch.Prefix">Recipe Tags</MudNavLink>
		</MudNavGroup>
		<MudNavGroup Title="Shopping" Icon="@Icons.Material.Filled.ShoppingBag" Expanded="@isExpanded[menuShopping]" ExpandedChanged="@((bool val) => HandleExpandedChanged(menuShopping, val))">
			<MudNavLink Href="/shopping-lists" Match="NavLinkMatch.Prefix">Shopping Lists</MudNavLink>
			<MudNavLink Href="/products" Match="NavLinkMatch.Prefix">Products</MudNavLink>
			<MudNavLink Href="/product-bundles" Match="NavLinkMatch.Prefix">Product Bundles</MudNavLink>
			<MudNavLink Href="/product-categories" Match="NavLinkMatch.Prefix">Product Categories</MudNavLink>
			<MudNavLink Href="/stores" Match="NavLinkMatch.Prefix">Stores</MudNavLink>
		</MudNavGroup>
	}
</MudNavMenu>

@code {
	private const string menuCookbook = "MenuCookbookExpanded";
	private const string menuMealPrep = "MenuMealPrepExpanded";
	private const string menuShopping = "MenuShoppingExpanded";

	private Dictionary<string, bool> isExpanded = new()
	{
		{menuCookbook, true},
		{menuMealPrep, true},
		{menuShopping, true}
	};

	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();

		foreach (string key in isExpanded.Keys)
		{
			isExpanded[key] = await GetLocalBool(key) ?? true;
		}
	}

	private async Task HandleExpandedChanged(string key, bool value)
	{
		isExpanded[key] = value;
		await SaveLocalBool(key, value);
	}

}