@inherits SectionPropertiesBase

<SectionComponent IsEditMode="@IsEditMode" IsEditing="@IsEditing" Class="mb-6">
	<SectionHeader Title="@Product.Title" IsEditMode="@IsEditMode" IsEditing="@IsEditing" EditingClass="mb-4" FormId="@FormId" Breakpoint="Breakpoint.Sm" 
				   OnCancelClicked="@(() => HandleEditCancelClicked())">
		<TitleContent>
			@if (!string.IsNullOrEmpty(Product.Category))
			{
				<MudText Typo="Typo.body2" Color="Color.Tertiary">@Product.Category</MudText>
			}
			@if (!string.IsNullOrEmpty(Product.Brand))
			{
				<MudText Typo="Typo.subtitle1">@Product.Brand</MudText>
			}
			<MudText Typo="Typo.h4">@Product.Title</MudText>
		</TitleContent>
		<EditModeToolbar>
			<MudIconButton Icon="@Icons.Material.Filled.Edit" Disabled="@DisableSectionControls" OnClick="@(() => HandleEditClicked())" />
			<MudToggleIconButton Icon="@Icons.Material.Filled.Archive" ToggledIcon="@Icons.Material.Filled.Unarchive"
									Color="Color.Default" ToggledColor="Color.Warning"
									Disabled="@(DisableSectionControls || IsEditing)" title="@(Product.IsArchived ? "Restore" : "Archive")"
									Toggled="@Product.IsArchived" ToggledChanged="@(() => HandleToggleArchiveClicked())" />
		</EditModeToolbar>
	</SectionHeader>
	
	@if (!IsEditing)
	{
		@if (!string.IsNullOrEmpty(Product.Description))
		{
			<MudText Typo="Typo.body1" Color="Color.Tertiary">@Product.Description</MudText>
		}
	}
	else
	{
		<FormProperties Model="@Model" FormId="@FormId" Categories="@Categories" DisableFormControls="@DisableControls" OnFormSubmitted="@HandleFormSubmitted" />
	}
</SectionComponent>