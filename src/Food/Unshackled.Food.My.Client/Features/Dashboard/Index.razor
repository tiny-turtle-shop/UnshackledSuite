@page "/"
@inherits IndexBase

<DynamicPageTitle Title="Dashboard" />

<div class="d-flex flex-row flex-wrap gap-3 justify-center align-center mb-6">
	<DashboardTile Href="/cookbooks" Icon="@Icons.Material.Filled.CollectionsBookmark" Title="Cookbooks" />
	<DashboardTile Href="/households" Icon="@Icons.Material.Filled.Groups" Title="Households" />
	<DashboardTile Href="/recipes" Icon="@Icons.Material.Filled.Dining" Title="Recipes" />
	<DashboardTile Href="/shopping-lists" Icon="@Icons.Material.Filled.ShoppingBag" Title="Shopping Lists" />
</div>

@if (string.IsNullOrEmpty(SelectedCategorySid))
{
	<MudGrid Spacing="3" Justify="Justify.Center">
		@foreach (var category in PinnedCategories)
		{
			<MudItem xs="6" sm="4" md="3" lg="2">
				<MudPaper Class="h-100">
					<MudText Align="Align.Center" Typo="Typo.body1">
						<MudLink OnClick="@(() => HandleCategoryClicked(category.Sid))">@category.Title</MudLink>
					</MudText>
				</MudPaper>
			</MudItem>
		}
	</MudGrid>
}
else 
{
	<MudGrid Spacing="3" Justify="Justify.Center">
		<MudItem xs="6" sm="4" md="3" lg="2">
			<MudPaper Class="h-100">
				<MudLink Class="d-flex flex-row gap-2 align-center" OnClick="@(() => HandleCategoryClearClicked())">
					<MudIcon Icon="@Icons.Material.Filled.ArrowBack" />
					<MudText Typo="Typo.body1">Back</MudText>
				</MudLink>
			</MudPaper>
		</MudItem>
		@foreach (var item in FilteredProducts)
		{
			<MudItem xs="6" sm="4" md="3" lg="2">
				<MudPaper Class="h-100">
					@if (!string.IsNullOrEmpty(item.Brand))
					{
						<MudText Typo="Typo.body2" Align="Align.Center">@item.Brand</MudText>
					}
					<MudText Typo="Typo.body1" Align="Align.Center" Color="Color.Primary">
						@if (ActiveMember.HasHouseholdPermissionLevel(PermissionLevels.Write))
						{
							<MudLink OnClick="@(() => HandleAddToListClicked(item.Sid))">@item.Title</MudLink>
						}
						else 
						{
							<text>@item.Title</text>
						}
					</MudText>
					@if (!string.IsNullOrEmpty(item.Description))
					{
						<MudText Typo="Typo.caption" Color="Color.Tertiary" Align="Align.Center">@item.Description</MudText>
					}
				</MudPaper>
			</MudItem>
		}
	</MudGrid>
}

<SideDrawer Title="@DrawerTitle" Open="@DrawerOpen" OpenChanged="@(() => HandleCancelClicked())">
	@if (DrawerView == Views.AddToList)
	{
		<DrawerAddToList ShoppingLists="@ShoppingLists" OnCanceled="@HandleCancelClicked" OnAdded="@HandleAddToListSubmitted" />
	}
</SideDrawer>