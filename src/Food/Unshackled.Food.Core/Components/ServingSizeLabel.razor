@using Unshackled.Food.Core.Models.Recipes

<span class="label-unit">@GetServingSizeLabel()</span>

@code {
	[Parameter] public decimal ServingSize { get; set; }
	[Parameter] public ServingSizeUnits ServingSizeUnit { get; set; }
	[Parameter] public decimal ServingSizeMetric { get; set; }
	[Parameter] public ServingSizeMetricUnits ServingSizeMetricUnit { get; set; }

	protected MarkupString GetServingSizeLabel()
	{
		var amount = $"<span class=\"amt\">{ServingSize.ToHtmlFraction()}</span>";
		string amountLabel = $"<span class=\"amt-label\">{ServingSizeUnit.Label()}</span>";

		string metricAmount = $"<span class=\"amt\">{ServingSizeMetric.ToString("0.#")}</span>";
		string metricAmountLabel = $"<span class=\"amt-label\">{ServingSizeMetricUnit.Label()}</span>";

		if (ServingSize > 0 && ServingSizeMetric > 0)
		{
			return (MarkupString)$"{amount}{amountLabel} ({metricAmount}{metricAmountLabel})";
		}
		else if (ServingSize > 0)
		{
			return (MarkupString)$"{amount}{amountLabel}";
		}
		else if (ServingSizeMetric > 0)
		{
			return (MarkupString)$"{metricAmount}{metricAmountLabel}";
		}
		else
		{
			return (MarkupString)string.Empty;
		}
	}
}
