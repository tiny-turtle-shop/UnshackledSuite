@inherits SectionTasksBase

@if (IsEditMode || Tasks.Any())
{
	<SectionContainer IsEditMode="@IsEditMode" IsEditing="@IsEditing">
		<SectionHeader Typo="Typo.h5" Title="@($"{TaskType.Title()} Checklist")" IsEditMode="@IsEditMode" IsEditing="@IsEditing" DisableControls="@DisableControls" Class="mb-4" EditingClass="mb-4"
					   OnCancelClicked="@HandleCancelEditClicked" OnSaveClicked="@HandleUpdateClicked">
			<EditModeToolbar>
				<MudIconButton Icon="@Icons.Material.Filled.Edit" title="Edit" Disabled="@DisableSectionControls" OnClick="@(() => HandleEditClicked())" />
			</EditModeToolbar>
		</SectionHeader>

		@if (!IsEditing)
		{
			@if (Tasks.Any())
			{
				@foreach (var task in Tasks)
				{
					<MudDivider DividerType="DividerType.FullWidth" Class="my-2" />
					<div class="d-flex flex-row gap-3 align-center">
						<div>
							<MudAvatar Variant="Variant.Outlined" Size="Size.Small">@(task.SortOrder + 1)</MudAvatar>
						</div>
						<div class="flex-grow-1">
							<MudText Typo="Typo.subtitle1">@task.Text</MudText>
						</div>
					</div>
				}
				<MudDivider DividerType="DividerType.FullWidth" Class="my-2" />
			}
			else
			{
				<MudAlert Severity="Severity.Normal" Icon="@Icons.Material.Filled.Info">You have not added any items.</MudAlert>
			}
		}
		else
		{
			<SortableListView TItem="FormTemplateTaskModel" Items="@EditingTasks" AllowSort="true" DisableSort="@IsWorking"
							  ToolbarPosition="ToolbarPositions.Top" ToolbarAlignment="HorizontalAlignment.Left"
							  SortOrderChanged="@HandleSortChanged">
				<ItemRenderer>
					<div class="d-flex flex-row align-center gap-2 mb-3">
						<MudAvatar Variant="Variant.Outlined" Size="Size.Small">
							@(context.RowIndex + 1)
						</MudAvatar>
						<div class="flex-grow-1">
							<MudText Typo="Typo.subtitle1">@context.Item.Text</MudText>
						</div>
						<div>
							<MudIconButton Icon="@Icons.Material.Filled.Delete" title="Remove" Disabled="@IsWorking" OnClick="@(() => HandleDeleteClicked(context.Item))" />
						</div>
					</div>
				</ItemRenderer>
				<EmptyListRenderer>
					<MudAlert Severity="Severity.Normal" Icon="@Icons.Material.Filled.Info">You have not added any items.</MudAlert>
				</EmptyListRenderer>
				<DraggableItemRenderer>
					<MudPaper Elevation="2" Class="py-2 px-4 my-2">
						<div class="d-flex flex-row gap-4 align-center">
							<div>
								<MudIcon Icon="@Icons.Material.Filled.DragIndicator" />
							</div>
							<div>
								<MudText>@context.Text</MudText>
							</div>
						</div>
					</MudPaper>
				</DraggableItemRenderer>
				<ListTools>
					<MudButton StartIcon="@Icons.Material.Filled.AddCircle" Disabled="@IsWorking" OnClick="@(() => HandleAddTaskClicked())">Add</MudButton>
				</ListTools>
			</SortableListView>

			<SideDrawer @bind-Open="DrawerOpen" Icon="@DrawerIcon" Title="@DrawerTitle">
				<EditForm Model="@Model" OnValidSubmit="HandleFormSubmitted">
					<FluentValidationValidator Validator="ModelValidator"></FluentValidationValidator>
					<MudTextField Label="Task" Variant="Variant.Outlined" Margin="Margin.Dense" Immediate="true"
								  FullWidth="true" For="@(() => Model.Text)" @bind-Value="@Model.Text" />

					<MudToolBar Gutters="false" Class="mt-4">
						<MudSpacer />
						<MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Secondary">Add</MudButton>
						<MudButton Variant="Variant.Outlined" Color="Color.Secondary" OnClick="@HandleCancelAddClicked">Cancel</MudButton>
						<MudSpacer />
					</MudToolBar>
				</EditForm>

				<MudText Typo="Typo.h5" Class="mt-6">Recent Tasks</MudText>
				<ListView TItem="RecentTemplateTaskModel" Items="@RecentTasks">
					<ItemRenderer>
						<div class="d-flex flex-row align-center gap-2 mb-3">
							<div>
								<MudIconButton Icon="@Icons.Material.Filled.AddCircle" Color="Color.Secondary" Disabled="@IsWorking"
											   OnClick="@(() => HandleAddRecentClicked(context.Item))" />
							</div>
							<div class="flex-grow-1">
								<MudText Typo="Typo.subtitle1">@context.Item.Text</MudText>
							</div>
						</div>
					</ItemRenderer>
					<EmptyListRenderer>
						<MudAlert Severity="Severity.Normal" Icon="@Icons.Material.Filled.Info">You have no recent tasks.</MudAlert>
					</EmptyListRenderer>
				</ListView>
			</SideDrawer>
		}
	</SectionContainer>
}