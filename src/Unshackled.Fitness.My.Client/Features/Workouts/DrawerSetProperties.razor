@inherits DrawerSetPropertiesBase

<EditForm id="@FormId" Model="@Model" OnValidSubmit="HandleFormSubmitted">
	<FluentValidationValidator Validator="ModelValidator"></FluentValidationValidator>
	<MudGrid>
		<MudItem xs="12" md="6">
			<WorkoutSetTypeSelect @bind-Value="Model.SetType" Margin="Margin.Dense" Disabled="@DisableControls" />
		</MudItem>
		<MudItem xs="12" md="6">
			<SetMetricTypeSelect @bind-Value="Model.SetMetricType" Margin="Margin.Dense" Disabled="@DisableControls" />
		</MudItem>
		@if (Model.SetMetricType.HasReps())
		{
			<MudItem xs="12" md="6">
				<RepModeSelect Disabled="@DisableControls" Margin="Margin.Dense" @bind-Value="Model.RepMode" />
			</MudItem>
			@if (Model.RepMode == RepModes.Exact)
			{
				<MudItem xs="12" md="6">
					<MudNumericField T="int" Variant="Variant.Outlined" Margin="Margin.Dense" Step="1" Min="0" Max="@Globals.MaxSetReps" HideSpinButtons="true"
									 Immediate="true" Disabled="@DisableControls" Label="Target Reps"
									 @bind-Value="@Model.RepsTarget" For="@(() => Model.RepsTarget)" />
				</MudItem>
				<MudItem xs="12" md="6">
					<IntensitySelect Label="Target Intensity" Disabled="@DisableControls" Margin="Margin.Dense" @bind-Value="Model.IntensityTarget" />
				</MudItem>
			}
			else
			{
				<MudItem xs="12" md="6">
					<IntensitySelect Label="Target Intensity" Disabled="@DisableControls" Margin="Margin.Dense" @bind-Value="Model.IntensityTarget" />
				</MudItem>
			}
		}
		else
		{
			<MudItem xs="12" md="6">
				<TimeInput Variant="Variant.Outlined" Margin="Margin.Dense" Disabled="@DisableControls" HourLabel="Target (hr)" @bind-Value="@Model.SecondsTarget" />
			</MudItem>
		}
	</MudGrid>

	@if (FormToolbar != null)
	{
		<MudToolBar Gutters="false" Class="mt-4">
			@FormToolbar
		</MudToolBar>
	}
</EditForm>

