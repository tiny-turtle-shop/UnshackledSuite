@page "/activities"
@inherits IndexBase

<DynamicPageTitle  IsLoading="@IsLoading" LoadingTitle="Loading Activities..." Title="Activities" />

<MudBreadcrumbs Items="@Breadcrumbs" />

<SectionHeader Class="mb-6" Title="Activities" />

<div class="mb-6">
	<SearchForm @bind-Model="@SearchModel" Class="mb-6" SearchClicked="@(() => DoSearch(1))" ResetClicked="@HandleResetClicked" VerticalButtons="Breakpoint.Sm" Disable="@DisableControls">
		<SearchFields>
			<MudGrid Spacing="1">
				<MudItem xs="12" md="3">
					<MudDateRangePicker Label="Date Range" Variant="Variant.Outlined" Margin="Margin.Dense" DateRange="@DateRangeSearch" Disabled="@DisableControls" DateRangeChanged="@HandleDateRangeChanged" Clearable="true" />
				</MudItem>
				<MudItem xs="12" md="3">
					<MudSelect T="string" Label="Activity Type" Variant="Variant.Outlined" Margin="Margin.Dense" FullWidth="true" Disabled="@DisableControls" Placeholder="Any" @bind-Value="@SearchModel.ActivityTypeSid">
						<MudSelectItem T="string" Value="null">Any</MudSelectItem>
						@foreach (var item in ActivityTypes)
						{
							<MudSelectItem T="string" Value="@item.Sid">@item.Title</MudSelectItem>
						}
					</MudSelect>
				</MudItem>
				<MudItem xs="12" md="3">
					<EventTypeSelect AllOption="true" Margin="Margin.Dense" Label="Event Type" Disabled="@DisableControls" @bind-Value="@SearchModel.EventType" />
				</MudItem>
				<MudItem xs="12" md="3">
					<MudTextField Label="Title" Variant="Variant.Outlined" FullWidth="true" Margin="Margin.Dense" T="string" @bind-Value="@SearchModel.Title" Disabled="@DisableControls" />
				</MudItem>
			</MudGrid>
		</SearchFields>
	</SearchForm>
	<MudToolBar Class="mb-2" Gutters="false" Dense="true">
		@if (IsMemberActive)
		{
			<MudButton StartIcon="@Icons.Material.Filled.AddCircle" Disabled="@(DisableControls || !HasActivityTypes)" OnClick="@(() => HandleAddActivityClicked())">New</MudButton>
		}
		<MudMenu Label="Sort" StartIcon="@Icons.Material.Filled.Sort">
			<MudMenuItem OnClick="@(() => HandleSortByClicked(0, nameof(ActivityListModel.DateEventUtc)))">Activity Date (Asc)</MudMenuItem>
			<MudMenuItem OnClick="@(() => HandleSortByClicked(1, nameof(ActivityListModel.DateEventUtc)))">Activity Date (Desc)</MudMenuItem>
		</MudMenu>
	</MudToolBar>
	<ListView Class="mb-6" TItem="ActivityListModel" Items="@SearchResults.Data" IsLoading="@IsLoading" 
			  PageSize="@SearchResults.PageSize" Page="@SearchModel.Page" TotalItems="@SearchResults.Total" PageSelected="@HandlePageSelected">
		<ItemRenderer>
			<MudGrid Spacing="2" Class="align-center my-2">
				<MudItem xs="12" md="7" lg="8">
					<div class="d-flex flex-row gap-4 align-center">
						<div>
							<MudElement HtmlTag="div" Style="@context.Item.ActivityTypeColor.SwatchStyle()" />
						</div>
						<div>
							<div class="d-flex flex-row gap-3 align-center">
								<MudText Typo="Typo.caption" Class="d-block">@context.Item.DateEventUtc.ToLocalTime().ToString("d")</MudText>
								<MudText Typo="Typo.caption" Color="Color.Tertiary">@context.Item.EventType.Title()</MudText>
							</div>
							<MudLink Typo="Typo.subtitle1" Href="@($"/activities/{context.Item.Sid}")">@context.Item.Title</MudLink>
						</div>
					</div>
				</MudItem>
				<MudItem xs="12" md="5" lg="4">
					<MudGrid Spacing="2">
						<MudItem xs="4">
							<CaptionedProperty Align="Align.Center" Title="Total Distance">
								<DistanceLabel DistanceMeters="@context.Item.TotalDistanceMeters" UnitSystem="@State.ActiveMember.Settings.DefaultUnits" UseLargeUnits="true" />
							</CaptionedProperty>
						</MudItem>
						<MudItem xs="4">
							<CaptionedProperty Align="Align.Center" Title="Total Time">
								<TimeLabel Seconds="@((int)context.Item.TotalTimeSeconds)" />
							</CaptionedProperty>
						</MudItem>
						<MudItem xs="4">
							<CaptionedProperty Align="Align.Center" Title="Total Calories" Value="@context.Item.TotalCalories.ToString()" />
						</MudItem>
					</MudGrid>
				</MudItem>
			</MudGrid>
		</ItemRenderer>
		<EmptyListRenderer>
			@if (HasActivityTypes)
			{
				<MudText Align="Align.Center" Class="mt-4">No activities matched your search.</MudText>
			}
			else
			{
				<MudText Align="Align.Center" Class="my-4">You have not created any activity types. Activities can not be added until you have at least one activity type defined.</MudText>
				<MudText Align="Align.Center"><MudLink Typo="Typo.body2" Class="d-block" Href="/activity-types">Go to Activity Types</MudLink></MudText>
			}
		</EmptyListRenderer>
	</ListView>
</div>

<SideDrawer Title="@DrawerTitle" Open="@DrawerOpen" OpenChanged="@(() => HandleCancelClicked())">
	@if (DrawerView == Views.Add)
	{
		<DrawerAdd ActivityTypes="@ActivityTypes" OnActivityAdded="HandleActivityAdded" OnCanceled="@HandleCancelClicked" />
	}
</SideDrawer>