@inherits DrawerStoreLocationBase

<EditForm Model="@Model" OnValidSubmit="HandleFormSubmitted">
	<FluentValidationValidator Validator="ModelValidator"></FluentValidationValidator>
	<MudGrid Spacing="1" Class="mb-4">
		<MudItem xs="12">
			<MudTextField Label="Title" Variant="Variant.Outlined" Immediate="true" Disabled="@DisableControls"
			FullWidth="true" For="@(() => Model.Title)" @bind-Value="@Model.Title" />
		</MudItem>
		<MudItem xs="12">
			<MudTextField Label="Short Description" Variant="Variant.Outlined" FullWidth="true" Disabled="@IsSaving"
			For="@(() => Model.Description)" @bind-Value="@Model.Description" />
		</MudItem>
	</MudGrid>
	<MudToolBar Gutters="false">
		<MudSpacer />
		<MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@DisableControls" ButtonType="ButtonType.Submit">@SubmitButtonLabel</MudButton>
		<MudButton Variant="Variant.Outlined" Color="Color.Primary" Disabled="@DisableControls" OnClick="@(() => HandleCancelClicked())">Cancel</MudButton>
		<MudSpacer />
	</MudToolBar>
</EditForm>

@if (!IsAdding)
{
	<MudDivider DividerType="DividerType.FullWidth" Class="my-6" />

	<div class="d-flex flex-column gap-3">
		<MudButton StartIcon="@Icons.Material.Filled.Delete" Variant="Variant.Filled" FullWidth="true" OnClick="@(() => HandleDeleteClicked())">Delete Item</MudButton>
	</div>
}
else 
{
	<MudText Typo="Typo.body2" Color="Color.Tertiary" Class="mt-6 mb-2">Common Departments</MudText>
	<div class="d-flex gap-1 flex-row flex-wrap">
		@foreach (var item in EnumUtils.GetSortedValues<CommonStoreLocations>())
		{
			<MudChip T="CommonStoreLocations" OnClick="@(() => HandleCommonAddClicked(item))">@item.Title()</MudChip>
		}
	</div>
}
