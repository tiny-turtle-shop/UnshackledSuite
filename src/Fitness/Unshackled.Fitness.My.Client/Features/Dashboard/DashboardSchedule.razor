@inherits DashboardProgramBase

<MudPaper Class="d-flex flex-column gap-0 align-center h-100">
	<MudText Align="Align.Center" Color="Color.Tertiary">Today's Schedule</MudText>
	@if (Items.Any())
	{
		<ListView TItem="ScheduledListModel" Items="@Items" Class="w-100">
			<ItemRenderer>
				@if (context.Item.ItemType == ScheduledListModel.ItemTypes.Workout)
				{
					@if (!context.Item.IsStarted)
					{
						<div class="d-flex flex-row gap-2 align-center">
							<div class="flex-grow-1">
								<MudLink Class="d-block" Href="@($"/templates/{context.Item.Sid}")" Disabled="@(IsWorking || IsSkipping)">@context.Item.Title</MudLink>
								<MudText Typo="Typo.caption" Color="Color.Tertiary">from <a href="@($"/programs/{context.Item.ParentSid}")">@context.Item.ParentTitle</a></MudText>
							</div>
							@if (IsMemberActive)
							{
								<div>
									@if (context.Item.ProgramType == ProgramTypes.Sequential)
									{
										<MudIconButton Icon="@Icons.Material.Filled.NextPlan" Class="me-2" title="Skip to next workout" Disabled="@IsSkipping"
													   OnClick="@(() => HandleSkipWorkoutClicked(context.Item))" />
									}
									<ProgressButton Variant="Variant.Filled" Color="Color.Secondary" Size="Size.Small"
													IsWorking="@IsWorking" WorkingText="Opening" Disabled="@IsSkipping"
													OnClick="@(() => HandleTrackWorkoutClicked(context.Item.Sid))">Track</ProgressButton>
								</div>
							}
						</div>
					}
					else
					{
						<div class="d-flex flex-row gap-2 align-center">
							<div class="flex-grow-1">
								<MudLink Class="d-block" Href="@($"/workouts/{context.Item.Sid}")" Disabled="@(IsWorking || IsSkipping)">@context.Item.Title</MudLink>
								<MudText Typo="Typo.caption" Color="Color.Tertiary">from <a href="@($"/programs/{context.Item.ParentSid}")">@context.Item.ParentTitle</a></MudText>
							</div>
							<div>
								@if (!context.Item.IsCompleted)
								{
									<MudButton Variant="Variant.Filled" Color="Color.Secondary" Size="Size.Small" Disabled="@IsSkipping"
											   Href="@($"/workouts/{context.Item.Sid}")">Resume</MudButton>
								}
								else
								{
									<MudIcon Icon="@Icons.Material.Filled.CheckCircle" Color="Color.Success" />
								}
							</div>
						</div>
					}
				}
				else 
				{
					@if (!context.Item.IsStarted)
					{
						<div class="d-flex flex-row gap-2 align-center">
							<div class="flex-grow-1">
								<MudLink Class="d-block" Href="@($"/training-sessions/{context.Item.Sid}")" Disabled="@(IsWorking || IsSkipping)">@context.Item.Title</MudLink>
								<MudText Typo="Typo.caption" Color="Color.Tertiary">from <a href="@($"/training-programs/{context.Item.ParentSid}")">@context.Item.ParentTitle</a></MudText>
							</div>
							@if (IsMemberActive)
							{
								<div>
									@if (context.Item.ProgramType == ProgramTypes.Sequential)
									{
										<MudIconButton Icon="@Icons.Material.Filled.NextPlan" Class="me-2" title="Skip to next training session" Disabled="@IsSkipping"
													   OnClick="@(() => HandleSkipSessionClicked(context.Item))" />
									}
									<ProgressButton Variant="Variant.Filled" Color="Color.Secondary" Size="Size.Small"
													IsWorking="@IsWorking" WorkingText="Opening" Disabled="@IsSkipping"
													OnClick="@(() => HandleTrackActivityClicked(context.Item.Sid))">Track</ProgressButton>
								</div>
							}
						</div>
					}
					else
					{
						<div class="d-flex flex-row gap-2 align-center">
							<div class="flex-grow-1">
								<MudLink Class="d-block" Href="@($"/training-sessions/{context.Item.Sid}")" Disabled="@(IsWorking || IsSkipping)">@context.Item.Title</MudLink>
								<MudText Typo="Typo.caption" Color="Color.Tertiary">from <a href="@($"/training-programs/{context.Item.ParentSid}")">@context.Item.ParentTitle</a></MudText>
							</div>
							<div>
								@if (!context.Item.IsCompleted)
								{
									<MudButton Variant="Variant.Filled" Color="Color.Secondary" Size="Size.Small" Disabled="@IsSkipping"
											   Href="@($"/activities/{context.Item.Sid}")">View</MudButton>
								}
								else
								{
									<MudIcon Icon="@Icons.Material.Filled.CheckCircle" Color="Color.Success" />
								}
							</div>
						</div>
					}
				}
			</ItemRenderer>
		</ListView>
	}
	else
	{
		<div class="d-flex flex-row gap-2 align-center mt-3">
			<MudIcon Icon="@Icons.Material.Filled.Hotel" Size="Size.Small" />
			<MudText Class="mt-1">Rest Day</MudText>
		</div>
	}
</MudPaper>


