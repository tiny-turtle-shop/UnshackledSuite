@using Unshackled.Fitness.Core.Enums

@if (IsTrackingSplit)
{
	if (DisplaySplitTracking == 0)
	{
		<span class="result"><span class="pre-result-label">L</span>@secondsLeft.SecondsAsTimeSpan() / <span class="pre-result-label">R</span>@secondsRight.SecondsAsTimeSpan()</span>
	}
	else
	{
		<span class="result"><span class="pre-result-label">R</span>@secondsRight.SecondsAsTimeSpan() / <span class="pre-result-label">L</span>@secondsLeft.SecondsAsTimeSpan()</span>
	}
}
else
{
	<span class="result">@seconds.SecondsAsTimeSpan()</span>
}

@code {
	[Parameter] public int? Seconds { get; set; }
	[Parameter] public int? SecondsLeft { get; set; }
	[Parameter] public int? SecondsRight { get; set; }
	[Parameter] public bool IsTrackingSplit { get; set; }
	[Parameter] public int DisplaySplitTracking { get; set; }

	private int seconds = 0;
	private int secondsLeft = 0;
	private int secondsRight = 0;

	protected override void OnParametersSet()
	{
		base.OnParametersSet();

		seconds = Seconds.HasValue ? Seconds.Value : 0;
		secondsLeft = SecondsLeft.HasValue ? SecondsLeft.Value : 0;
		secondsRight = SecondsRight.HasValue ? SecondsRight.Value : 0;
	}
}
