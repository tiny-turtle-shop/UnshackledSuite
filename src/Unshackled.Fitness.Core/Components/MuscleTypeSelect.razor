@if (MultiSelection)
{
	<MudSelect T="MuscleTypes" Label="Muscles" FullWidth="true" Variant="Variant.Outlined" MultiSelection="@MultiSelection"
			   Margin="@Margin" Disabled="@Disabled" SelectedValues="@SelectedValues" SelectedValuesChanged="@SelectedValuesChanged"
			   MultiSelectionTextFunc="@(new Func<List<string>, string>(GetMultiSelectionText))">
		@if (AllOption)
		{
			<MudSelectItem T="MuscleTypes" Value="@MuscleTypes.Any">@MuscleTypes.Any.Title()</MudSelectItem>
		}
		@foreach (var item in EnumUtils.GetSortedValues<MuscleTypes>())
		{
			@if (item != MuscleTypes.Any)
			{
				<MudSelectItem T="MuscleTypes" Value="@item">@item.Title()</MudSelectItem>
			}
		}
	</MudSelect>
}
else
{
	<MudSelect T="MuscleTypes" Label="Muscle" FullWidth="true" Variant="Variant.Outlined" Margin="@Margin" Disabled="@Disabled"
			   Value="@Value" ValueChanged="@ValueChanged">
		@if (AllOption)
		{
			<MudSelectItem T="MuscleTypes" Value="@MuscleTypes.Any">@MuscleTypes.Any.Title()</MudSelectItem>
		}
		@foreach (var item in EnumUtils.GetSortedValues<MuscleTypes>())
		{
			@if (item != MuscleTypes.Any)
			{
				<MudSelectItem T="MuscleTypes" Value="@item">@item.Title()</MudSelectItem>
			}
		}
	</MudSelect>
}

@code {
	[Parameter] public MuscleTypes Value { get; set; }
	[Parameter] public IEnumerable<MuscleTypes> SelectedValues { get; set; } = new List<MuscleTypes>();
	[Parameter] public bool AllOption { get; set; } = false;
	[Parameter] public bool MultiSelection { get; set; } = false;
	[Parameter] public bool Disabled { get; set; } = false;
	[Parameter] public EventCallback<MuscleTypes> ValueChanged { get; set; }
	[Parameter] public EventCallback<IEnumerable<MuscleTypes>> SelectedValuesChanged { get; set; }
	[Parameter] public Margin Margin { get; set; } = Margin.Normal;

	private string GetMultiSelectionText(List<string> selectedValues)
	{
		List<MuscleTypes> selected = selectedValues
			.Select(x => (MuscleTypes)Enum.Parse(typeof(MuscleTypes), x))
			.ToList();
		return string.Join(", ", selected.Select(x => x.Title()));
	}
}
